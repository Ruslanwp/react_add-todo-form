{"version":3,"sources":["components/Todo/Todo.jsx","types.js","components/TodoList/TodoList.jsx","components/AddTodoForm/AddTodoForm.jsx","api/users.js","App.js","api/todos.js","index.js"],"names":["Todo","PropTypes","shape","id","number","isRequired","name","string","username","email","address","street","suite","city","zipcode","geo","lat","lng","title","completed","bool","userId","user","status","TodoList","todos","className","map","todo","key","defaulProps","AddTodoForm","state","selectedUser","selectedUserError","titleError","selectUserHandler","e","value","target","foundedUser","props","users","find","setState","changeTitleHandler","reset","onSubmitHandler","preventDefault","onAdd","onCreate","this","onSubmit","type","placeholder","onChange","disabled","React","Component","phone","website","company","catchPhrase","bs","preparedTodos","usersFromApi","App","createTodo","length","addTodo","newTodo","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5867bf50.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { UserType } from '../../types';\n\nexport const Todo = ({ title, user, status }) => (\n  <>\n    <h3>{user.name}</h3>\n    <p>\n      title:\n      {' '}\n      {title}\n    </p>\n    <p>\n      status:\n      {`${status}`}\n    </p>\n  </>\n);\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  user: UserType.isRequired,\n  status: PropTypes.bool.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const UserType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n\n  address: PropTypes.shape({\n    street: PropTypes.string.isRequired,\n    suite: PropTypes.string.isRequired,\n    city: PropTypes.string.isRequired,\n    zipcode: PropTypes.string.isRequired,\n\n    geo: PropTypes.shape({\n      lat: PropTypes.string.isRequired,\n      lng: PropTypes.string.isRequired,\n    }),\n  }),\n});\n\nexport const TodoType = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userId: PropTypes.number.isRequired,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './TodoList.css';\nimport { Todo } from '../Todo/Todo';\nimport { TodoType } from '../../types';\n\nexport const TodoList = ({ todos }) => (\n  <ol className=\"list\">\n    {todos.map(todo => (\n      <li key={todo.id} className=\"list__item\">\n        <Todo\n          title={todo.title}\n          user={todo.user}\n          status={todo.completed}\n        />\n      </li>\n    ))}\n  </ol>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoType).isRequired,\n};\n\nTodoList.defaulProps = {\n  todos: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class AddTodoForm extends React.Component {\n  state = {\n    title: '',\n    selectedUser: null,\n    selectedUserError: false,\n    titleError: false,\n  }\n\n  selectUserHandler = (e) => {\n    const { value } = e.target;\n    const foundedUser = this.props.users.find(user => user.name === value);\n\n    this.setState({\n      selectedUser: foundedUser,\n      selectedUserError: false,\n    });\n  }\n\n  changeTitleHandler = (e) => {\n    const { value } = e.target;\n\n    this.setState({\n      title: value,\n      titleError: false,\n    });\n  }\n\n  reset = () => {\n    this.setState({\n      selectedUser: null,\n      title: '',\n    });\n  }\n\n  onSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const { selectedUser, title } = this.state;\n    const { onAdd, onCreate } = this.props\n\n    if (selectedUser === null) {\n      this.setState({ selectedUserError: true });\n    }\n\n    if (title === '') {\n      this.setState({ titleError: true });\n    }\n\n    if (selectedUser === null || title === '') {\n      return;\n    }\n\n    const todo = onCreate(this.state);\n\n    onAdd(todo)\n\n    this.reset();\n  }\n\n  render() {\n    const {\n      title,\n      selectedUser,\n      selectedUserError,\n      titleError,\n    } = this.state;\n\n    const { users } = this.props;\n\n    return (\n      <form onSubmit={this.onSubmitHandler}>\n        <span className=\"error\">\n          {titleError && 'Please enter the title'}\n        </span>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={this.changeTitleHandler}\n        />\n        <select\n          name=\"selectedUser\"\n          value={selectedUser ? selectedUser.name : 'initial value'}\n          onChange={this.selectUserHandler}\n        >\n          <option value=\"initial value\" disabled>\n            Choose a user\n          </option>\n          {users.map(user => (\n            <option key={user.id} value={user.name}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n        <span className=\"error\">\n          {selectedUserError && 'Please choose a user'}\n        </span>\n\n        <div>\n          <button type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nAddTodoForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCreate: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport './App.css';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { AddTodoForm } from './components/AddTodoForm/AddTodoForm';\n\nimport usersFromApi from './api/users';\nimport todosFromApi from './api/todos';\n\nconst preparedTodos = todosFromApi.map(todo => ({\n  ...todo,\n  user: usersFromApi.find(user => user.id === todo.userId),\n}));\n\nclass App extends React.Component {\n  state = {\n    todos: preparedTodos,\n  }\n\n  createTodo = (todo) => {\n    const { selectedUser, title } = todo;\n\n    const newTodo = {\n      id: this.state.todos.length + 1,\n      title,\n      user: selectedUser,\n      userId: selectedUser.id,\n      completed: false,\n    };\n\n    return newTodo;\n  }\n\n  addTodo = (newTodo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, newTodo],\n    }));\n  }\n\n  render() {\n    const { todos } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n\n        <AddTodoForm\n          onCreate={this.createTodo}\n          onAdd={this.addTodo}\n          users={usersFromApi}\n        />\n\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}